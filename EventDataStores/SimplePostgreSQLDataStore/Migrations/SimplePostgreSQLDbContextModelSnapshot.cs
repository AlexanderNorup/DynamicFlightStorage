// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimplePostgreSQLDataStore;

#nullable disable

namespace SimplePostgreSQLDataStore.Migrations
{
    [DbContext(typeof(SimplePostgreSQLDbContext))]
    partial class SimplePostgreSQLDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimplePostgreSQLDataStore.DbEntities.AirportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FlightEntityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ICAO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LastSeenWeatherCategory")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlightEntityId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("SimplePostgreSQLDataStore.DbEntities.FlightEntity", b =>
                {
                    b.Property<string>("FlightIdentification")
                        .HasColumnType("text");

                    b.Property<bool>("IsRecalculating")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ScheduledTimeOfArrival")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ScheduledTimeOfDeparture")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FlightIdentification");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("SimplePostgreSQLDataStore.DbEntities.AirportEntity", b =>
                {
                    b.HasOne("SimplePostgreSQLDataStore.DbEntities.FlightEntity", "FlightEntity")
                        .WithMany("Airports")
                        .HasForeignKey("FlightEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightEntity");
                });

            modelBuilder.Entity("SimplePostgreSQLDataStore.DbEntities.FlightEntity", b =>
                {
                    b.Navigation("Airports");
                });
#pragma warning restore 612, 618
        }
    }
}
